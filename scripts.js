let products = [];
let cart = JSON.parse(localStorage.getItem('cart')) || [];
let currentProduct = null;
let currentQuantity = 1;
let currentImageIndex = 0;
let chatMessages = [];
let startX = 0;
let isSwiping = false;
let searchIndex = -1;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ products.json
async function loadProducts() {
    try {
        const response = await fetch('products.json');
        if (!response.ok) {
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–≤–∞—Ä–æ–≤');
        }
        products = await response.json();
        displayProducts();
        displayRecommendedProducts();
        displayNewProducts();
        displaySaleProducts();
        displayPopularProducts();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–≤–∞—Ä–æ–≤:', error);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
function displayProducts(filteredProducts = products) {
    const productsDiv = document.getElementById("product-gallery");
    productsDiv.innerHTML = '';
    filteredProducts.forEach((product, index) => {
        const productDiv = document.createElement("div");
        productDiv.className = "product-card";
        productDiv.innerHTML = `
            <img src="${product.images[0]}" alt="${product.name}" class="product-image" onclick="openModal(${index})">
            <h2>${product.name}</h2>
            <p class="price">${product.price}‚ÇΩ</p>
            <button class="btn" onclick="orderNow('${product.name}', '${product.images[0]}')">–ó–∞–∫–∞–∑–∞—Ç—å üõçÔ∏è</button>
            <button class="btn" onclick="addToCart('${product.name}', ${product.price}, '${product.images[0]}')">–í –∫–æ—Ä–∑–∏–Ω—É üõí</button>
        `;
        productsDiv.appendChild(productDiv);
    });
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö, –Ω–æ–≤—ã—Ö, —Å–æ —Å–∫–∏–¥–∫–æ–π –∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
function displayRecommendedProducts() {
    const recommendedDiv = document.getElementById("recommended-products");
    recommendedDiv.innerHTML = '';
    const recommendedProducts = products.filter(product => product.isRecommended);
    recommendedProducts.forEach((product, index) => {
        const productDiv = document.createElement("div");
        productDiv.className = "product-card";
        productDiv.innerHTML = `
            <img src="${product.images[0]}" alt="${product.name}" onclick="openModal(${products.indexOf(product)})">
            <h2>${product.name}</h2>
            <p class="price">${product.price}‚ÇΩ</p>
            <button class="btn" onclick="orderNow('${product.name}', '${product.images[0]}')">–ó–∞–∫–∞–∑–∞—Ç—å</button>
            <button class="btn" onclick="addToCart('${product.name}', ${product.price}, '${product.images[0]}')">–í –∫–æ—Ä–∑–∏–Ω—É üõí</button>
        `;
        recommendedDiv.appendChild(productDiv);
    });
}

function displayNewProducts() {
    const newProductsDiv = document.getElementById("new-products");
    newProductsDiv.innerHTML = '';
    const newProducts = products.filter(product => product.isNew);
    newProducts.forEach((product, index) => {
        const productDiv = document.createElement("div");
        productDiv.className = "product-card";
        productDiv.innerHTML = `
            <img src="${product.images[0]}" alt="${product.name}" onclick="openModal(${products.indexOf(product)})">
            <h2>${product.name}</h2>
            <p class="price">${product.price}‚ÇΩ</p>
            <button class="btn" onclick="orderNow('${product.name}', '${product.images[0]}')">–ó–∞–∫–∞–∑–∞—Ç—å</button>
            <button class="btn" onclick="addToCart('${product.name}', ${product.price}, '${product.images[0]}')">–í –∫–æ—Ä–∑–∏–Ω—É üõí</button>
        `;
        newProductsDiv.appendChild(productDiv);
    });
}

function displaySaleProducts() {
    const saleProductsDiv = document.getElementById("sale-products");
    saleProductsDiv.innerHTML = '';
    const saleProducts = products.filter(product => product.isOnSale);
    saleProducts.forEach((product, index) => {
        const productDiv = document.createElement("div");
        productDiv.className = "product-card";
        productDiv.innerHTML = `
            <img src="${product.images[0]}" alt="${product.name}" onclick="openModal(${products.indexOf(product)})">
            <h2>${product.name}</h2>
            <p class="price">${product.price}‚ÇΩ</p>
                       <button class="btn" onclick="orderNow('${product.name}', '${product.images[0]}')">–ó–∞–∫–∞–∑–∞—Ç—å</button>
            <button class="btn" onclick="addToCart('${product.name}', ${product.price}, '${product.images[0]}')">–í –∫–æ—Ä–∑–∏–Ω—É üõí</button>
        `;
        saleProductsDiv.appendChild(productDiv);
    });
}

function displayPopularProducts() {
    const popularProductsDiv = document.getElementById("popular-products");
    popularProductsDiv.innerHTML = '';
    const popularProducts = products.filter(product => product.isPopular);
    popularProducts.forEach((product, index) => {
        const productDiv = document.createElement("div");
        productDiv.className = "product-card";
        productDiv.innerHTML = `
            <img src="${product.images[0]}" alt="${product.name}" onclick="openModal(${products.indexOf(product)})">
            <h2>${product.name}</h2>
            <p class="price">${product.price}‚ÇΩ</p>
            <button class="btn" onclick="orderNow('${product.name}', '${product.images[0]}')">–ó–∞–∫–∞–∑–∞—Ç—å</button>
            <button class="btn" onclick="addToCart('${product.name}', ${product.price}, '${product.images[0]}')">–í –∫–æ—Ä–∑–∏–Ω—É üõí</button>
        `;
        popularProductsDiv.appendChild(productDiv);
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openModal(index) {
    currentProduct = products[index];
    currentQuantity = 1;
    currentImageIndex = 0;

    document.getElementById("modalProductName").innerText = currentProduct.name;
    const modalProductImages = document.getElementById("modalProductImages");
    modalProductImages.innerHTML = '';
    currentProduct.images.forEach(image => {
        const img = document.createElement('img');
        img.src = image;
        img.alt = currentProduct.name;
        modalProductImages.appendChild(img);
    });

    document.getElementById("modalProductPrice").innerText = `–¶–µ–Ω–∞: ${currentProduct.price}‚ÇΩ`;
    document.getElementById("modalProductQuantity").innerText = currentQuantity;
    document.getElementById("productModal").style.display = "block";
    loadReviewsInModal(currentProduct.name);
    updateImageCount();

    // –î–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Å–≤–∞–π–ø–æ–≤
    const slider = document.getElementById("modalProductImages");
    slider.addEventListener('touchstart', handleTouchStart);
    slider.addEventListener('touchmove', handleTouchMove);
    slider.addEventListener('touchend', handleTouchEnd);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
function addToCart(name, price, image) {
    const existingProduct = cart.find(item => item.name === name);
    if (existingProduct) {
        existingProduct.quantity += 1;
    } else {
        cart.push({ name, price, image, quantity: 1 });
    }
    localStorage.setItem('cart', JSON.stringify(cart));
    alert(`${name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!`);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
function updateImageCount() {
    const totalImages = currentProduct.images.length;
    document.getElementById("imageCount").innerText = `${currentImageIndex + 1} –∏–∑ ${totalImages}`;
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–≤–∞–π–ø–æ–≤
function handleTouchStart(event) {
    startX = event.touches[0].clientX;
    isSwiping = true;
}

function handleTouchMove(event) {
    if (!isSwiping) return;
    const currentX = event.touches[0].clientX;
    const diffX = startX - currentX;

    if (Math.abs(diffX) > 50) {
        if (diffX > 0) {
            nextImage();
        } else {
            previousImage();
        }
        isSwiping = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø–æ—Å–ª–µ —Å–≤–∞–π–ø–∞
    }
}

function handleTouchEnd(event) {
    isSwiping = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–≤–∞–π–ø–∞
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –º–µ–∂–¥—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
function nextImage() {
    if (currentImageIndex < currentProduct.images.length - 1) {
        currentImageIndex++;
        updateImageDisplay();
    }
}

function previousImage() {
    if (currentImageIndex > 0) {
        currentImageIndex--;
        updateImageDisplay();
    }
}

function updateImageDisplay() {
    const modalProductImages = document.getElementById("modalProductImages");
    const images = modalProductImages.getElementsByTagName('img');
      for (let i = 0; i < images.length; i++) {
        images[i].style.display = (i === currentImageIndex) ? 'block' : 'none';
    }
    updateImageCount(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeModal() {
    document.getElementById("productModal").style.display = "none";
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∑—ã–≤–æ–≤ –≤ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function loadReviewsInModal(productName) {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ –æ —Ç–æ–≤–∞—Ä–µ
    const reviewsDiv = document.getElementById("modalReviews");
    reviewsDiv.innerHTML = `<p>–û—Ç–∑—ã–≤—ã –æ ${productName} –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å—é–¥–∞.</p>`;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", () => {
    loadProducts();
    document.getElementById("closeModalButton").onclick = closeModal;
});


